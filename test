import math
import time
import functools
'''
from threading import Thread
from array import *
'''

'''
small lists hold factors starting with i and c/i
the algorithm loops through sqrt(c)
each list is combined with reduce(list.__add__, ...)
'''
def factorsOf(c):
    factorList = sorted(reduce(list.__add__, ([i, c//i] for i in range(1, int(c**0.5) + 1) if c % i == 0)))
    factorList.pop()
    return factorList

c1 = (int(input("Input an first integer to factor: ")))   # 350000
c2 = (int(input("Input an second integer to factor: ")))  # 15485863
                                                        # our test number as well as a large prime number
start = time.time()
#get factors
factorsC1 = factorsOf(c1)
factorsC2 = factorsOf(c2)

#print the list of factors
print(factorsC1)
print(factorsC2)
end = time.time()

#print the execution time
print((end - start) , "milliseconds")
